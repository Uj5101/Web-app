{"version":3,"sources":["components/Burger/BurgerIngrediets/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Order.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","App.module.css","hoc/Auxs/Auxs.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngrediets/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Order/Order.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","auxs","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxs","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","nextContext","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","order","ingredientName","push","name","amount","ingredientsOutput","ig","display","margin","border","padding","Order","Number","parseFloat","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemove","updatePurchaseState","burgerBuilder","totalPrice","ingName","get","then","data","catch","burgerBuilderActions","checkoutSummary","CheckoutSummary","width","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updateOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","isNumeric","test","errorMessages","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredients","action","updatedIngredient","updatedState","removeIngredients","updatedIng","updatedSt","setIngredients","reducer","newOrder","autRedirectPath","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.39ab4069.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2AeIq\",\"BreadTop\":\"BurgerIngredient_BreadTop__3qh1g\",\"Seeds1\":\"BurgerIngredient_Seeds1__pjc0D\",\"Seeds2\":\"BurgerIngredient_Seeds2__1Tz92\",\"Meat\":\"BurgerIngredient_Meat__o6Ej_\",\"Cheese\":\"BurgerIngredient_Cheese__2m8S2\",\"Salad\":\"BurgerIngredient_Salad__1VgpQ\",\"Bacon\":\"BurgerIngredient_Bacon__11g5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1ZXw5\",\"Open\":\"SideDrawer_Open__atzBS\",\"Close\":\"SideDrawer_Close__1Qw4M\",\"Logo\":\"SideDrawer_Logo__17Mii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__rtcjm\",\"Label\":\"BuildControl_Label__3Qbns\",\"Less\":\"BuildControl_Less__33XjN\",\"More\":\"BuildControl_More__OW2xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__TYnXm\",\"Label\":\"Input_Label__EBQ4Q\",\"InputElement\":\"Input_InputElement__1zlKO\",\"Invalid\":\"Input_Invalid__1WbhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1yCHU\",\"Success\":\"Button_Success__9CDkw\",\"Danger\":\"Button_Danger__aXMoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__-wa9e\",\"Logo\":\"Toolbar_Logo__2qMVA\",\"DesktopOnly\":\"Toolbar_DesktopOnly__njPnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__TxyB7\",\"active\":\"NavigationItem_active__1OKwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3ZwwD\",\"OrderButton\":\"BuildControls_OrderButton__SYR8N\",\"enable\":\"BuildControls_enable__1auoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__dqE9b\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1dLs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__7mD1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2I_Bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1kS5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2MImf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2sYbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2mRdr\",\"load2\":\"Spinner_load2__280dt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2nP5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__24ZMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1fwUX\",\"Input\":\"ContactData_Input__1Djbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2UXHF\",\"Input\":\"Auth_Input__2Qbet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3NzUn\",\"App-logo\":\"App_App-logo__nwy-J\",\"App-logo-spin\":\"App_App-logo-spin__1mp9O\",\"App-header\":\"App_App-header__6bZLq\",\"App-link\":\"App_App-link__3GgV8\"};","const auxs = (props) => props.children;\r\n\r\nexport default auxs;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null }\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem> }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n</div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n        <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxs from '../../../hoc/Auxs/Auxs';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Auxs>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Auxs>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Auxs from '../Auxs/Auxs';\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false,\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxs>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Layout}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxs>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from \"./BurgerIngrediets/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients</p>\r\n    }\r\n  return (\r\n      <div className={classes.Burger}>\r\n          <BurgerIngredient type=\"bread-top\"/>\r\n          {transformedIngredients}\r\n          <BurgerIngredient type=\"bread-bottom\"/>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst  buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n      <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n      {controls.map(ctrl => (\r\n          <BuildControl\r\n              key={ctrl.label}\r\n              label={ctrl.label}\r\n              added={() => props.ingredientAdded(ctrl.type)}\r\n              removed={() => props.ingredientRemoved(ctrl.type)}\r\n              disabled={props.disabled[ctrl.type]}\r\n          />\r\n      ))}\r\n      <button className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n              onClick={props.ordered}\r\n      >{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n  </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxs from '../../../hoc/Auxs/Auxs';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render() {\r\n        return ( <Auxs>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div\r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        </Auxs>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled} className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Auxs from '../../../hoc/Auxs/Auxs';\r\nimport Button from '../../UI/Button/Button';\r\nimport '../../UI/Button/Button.module.css';\r\n\r\nclass OrderSummary extends Component {\r\n    componentWillUpdate () {\r\n        console.log('[OrderSummary] WillUpdate');\r\n    }\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}:</span>\r\n                        {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n        return (\r\n            <Auxs>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout ?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Auxs>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-app-burger-35b25.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst  spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxs from '../Auxs/Auxs';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n        }\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxs>\r\n                    <Modal\r\n                    modalClosed={this.errorConfirmedHandler}\r\n                        show={this.state.error}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxs>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: 'ipx solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} {ig.amount}</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n    };\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true,\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA10HitfWaJbu5C3tFM_c5bRacoS4-4aNE';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA10HitfWaJbu5C3tFM_c5bRacoS4-4aNE';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path,\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\r\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, {Component} from 'react';\r\nimport Auxs from '../../hoc/Auxs/Auxs';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actionTypes from '../../store/actions/actionTypes'\r\nimport {connect} from 'react-redux';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n    //\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if (oldCount <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n\r\n        // const queryParams = [];\r\n        // for (let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner/>;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Auxs>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemove}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        isAuth={this.props.isAuthenticated}\r\n                    />\r\n                </Auxs>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                price={this.props.price}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                ingredients={this.props.ings}/>\r\n        }\r\n\r\n\r\n        return (\r\n            <Auxs>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxs>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemove: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(burgerBuilderActions.setAuthRedirectPath(path)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n      ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n      ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n       axios.get('https://react-app-burger-35b25.firebaseio.com/ingredients.json')\r\n           .then(response => {\r\n               dispatch(setIngredients(response.data));\r\n           })\r\n           .catch(error => {\r\n               dispatch(fetchIngredientsFailed());\r\n           });\r\n   };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\nimport order from \"../../components/Order/Order\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData,\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            }).catch(error => {\r\n            dispatch(purchaseBurgerFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders: orders,\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDER_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDER_START,\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            }).catch(err => {\r\n            dispatch(fetchOrdersFail(err));\r\n        });\r\n    };\r\n};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!!!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n             clicked={props.checkoutCancelled} >CANCEL</Button>\r\n            <Button btnType=\"Success\"\r\n             clicked={props.checkoutContinued} >CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport {connect} from 'react-redux';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'street',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zipcode',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                    ],\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true,\r\n            },\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId,\r\n\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updateOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updateOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updateOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updateOrderForm) {\r\n            formIsValid = updateOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updateOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    // state = {\r\n    //     ingredients: null,\r\n    //     price: 0,\r\n    // }\r\n\r\n\r\n    // componentWillMount() {\r\n    //\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n    //     for(let param of query.entries()){\r\n    //         if (param[0] === 'price') {\r\n    //             price = param[1];\r\n    //         }else {\r\n    //             ingredients[param[0]] = +param[1];\r\n    //         }\r\n    //     }\r\n    //     this.setState({ingredients: ingredients, totalPrice: price});\r\n    // }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\"/>\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route path={this.props.match.path + '/contact-data'}\r\n                           component={ContactData}/>\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased,\r\n        price: state.totalPrice,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}\r\n                />\r\n            ))\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, {Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n        },\r\n        isSignup: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls ={\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName.validation]),\r\n                touched: true,\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup: !prevState.isSignup,\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            });\r\n        }\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessages = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessages = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessages}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : \"SIGNUP\"}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport './App.module.css';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport './containers/BurgerBuilder/BurgerBuilder'\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from './containers/Auth/Auth';\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" component={Auth}/>\n                <Route path=\"/\" exact component={BurgerBuilder}/>\n                <Redirect to=\"/\" />\n            </Switch>\n        );\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/checkout\" component={Checkout}/>\n                    <Route path=\"/orders\" component={Orders}/>\n                    <Route path=\"/logout\" component={Logout}/>\n                    <Route path=\"/auth\" component={Auth}/>\n                    <Route path=\"/\" exact component={BurgerBuilder}/>\n                    <Redirect to=\"/\" />\n                </Switch>\n            );\n        }\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst addIngredients = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true,\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true,\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false,\r\n    });\r\n};\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredients(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredients(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return updateObject(state, {error: true});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default burgerBuilder;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, {purchased: false});\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, {loading: true});\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                order: state.orders.concat(newOrder)\r\n            });\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, {loading: false});\r\n        case actionTypes.FETCH_ORDER_START:\r\n            return updateObject(state, {loading: true});\r\n        case actionTypes.FETCH_ORDER_SUCCESS:\r\n            return updateObject(state, {\r\n                loading: false,\r\n                orders: action.orders\r\n            });\r\n        case actionTypes.FETCH_ORDER_FAIL:\r\n            return updateObject(state, {loading: false});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    autRedirectPath: '/',\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state,{error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state,{\r\n        error: null,\r\n        loading: false,\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state,{error: action.error, loading: false});\r\n};\r\n\r\nconst setAuthRedirectPath =(state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart (state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess (state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail (state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout (state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath (state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n   burgerBuilder: burgerBuilderReducer ,\n    order: orderReducer,\n    auth: authReducer,\n});\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        {app}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}